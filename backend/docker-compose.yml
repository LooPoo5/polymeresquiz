
version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: quiz-postgres
    environment:
      POSTGRES_DB: quiz_app
      POSTGRES_USER: quiz_user
      POSTGRES_PASSWORD: quiz_password_change_in_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quiz_user -d quiz_app"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Backend
  api:
    build: .
    container_name: quiz-api
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://quiz_user:quiz_password_change_in_production@postgres:5432/quiz_app
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      PORT: 3001
      FRONTEND_URL: http://localhost
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./uploads:/app/uploads

  # Reverse Proxy Nginx
  nginx:
    image: nginx:alpine
    container_name: quiz-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ../dist:/usr/share/nginx/html
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
